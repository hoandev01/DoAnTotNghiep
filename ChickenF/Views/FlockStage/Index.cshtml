@model List<ChickenF.Models.FlockStage>

@{
    ViewData["Title"] = "Stages of Flock";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";

    var displayedFlocks = new HashSet<int>(); // đảm bảo mỗi Flock chỉ hiển thị 1 lần
}

<div class="container mx-auto px-4 py-6">
    <h2 class="text-2xl font-semibold mb-4 text-gray-800">Stages of Flock</h2>

    

    <div class="overflow-x-auto rounded shadow">
        <table class="min-w-full bg-white border border-gray-200">
            <thead class="bg-gray-100 text-left text-gray-600 uppercase text-sm">
                <tr>
                    <th class="py-3 px-4 border-b">Flock Name</th>
                    <th class="py-3 px-4 border-b">Stage</th>
                    <th class="py-3 px-4 border-b">Start</th>
                    <th class="py-3 px-4 border-b">End</th>
                    <th class="py-3 px-4 border-b">Note</th>
                    <th class="py-3 px-4 border-b text-center">Actions</th>
                </tr>
            </thead>
            <tbody class="text-gray-700">
                @foreach (var item in Model)
                {
                    var flockId = item.FlockId;

                    if (displayedFlocks.Contains(flockId)) continue; // đã hiển thị thì bỏ qua

                    var relatedStages = Model.Where(s => s.FlockId == flockId).ToList();

                    var currentStage = relatedStages.FirstOrDefault(s => s.Note != null && s.Note.Contains("Current Stage"));
                    var upcomingStage = relatedStages.FirstOrDefault(s => s.StartDate > DateTime.Today);

                    var stageToDisplay = currentStage ?? upcomingStage;

                    if (stageToDisplay == null) continue;

                    displayedFlocks.Add(flockId); // đánh dấu đã hiển thị

                    bool isCurrent = stageToDisplay.Note != null && stageToDisplay.Note.Contains("Current Stage");
                    bool isNotStarted = stageToDisplay.StartDate > DateTime.Today;

                    var rowClass = isCurrent
                    ? "bg-yellow-100 font-semibold"
                    : isNotStarted ? "text-gray-400 italic bg-gray-50" : "";

                    <tr class="hover:bg-gray-50 transition @rowClass">
                        <td class="py-3 px-4 border-b">@stageToDisplay.Flock?.FlockName</td>
                        <td class="py-3 px-4 border-b">@stageToDisplay.StageName</td>
                        <td class="py-3 px-4 border-b">@stageToDisplay.StartDate.ToString("dd/MM/yyyy")</td>
                        <td class="py-3 px-4 border-b">@stageToDisplay.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td class="py-3 px-4 border-b">
                            @if (isNotStarted)
                            {
                                <span class="text-sm">Not yet entered the herd</span>
                            }
                            else
                            {
                                @stageToDisplay.Note
                            }
                        </td>
                        <td class="px-4 py-3 border-b text-center">
                            <div class="flex justify-center gap-2">
                                <a asp-action="Edit" asp-route-id="@stageToDisplay.Id"
                                   class="bg-yellow-500 hover:bg-yellow-600 text-white px-3 py-1 rounded text-xs font-medium transition">Edit</a>
                                <a asp-action="Delete" asp-route-id="@stageToDisplay.Id"
                                   class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-xs font-medium transition">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
