@model PaginatedList<ChickenF.Models.Product>

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
}

<div class="px-6 py-8">
    <!-- Header -->
    <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
        <h1 class="text-2xl font-bold text-gray-800">📦 Products</h1>
        <div class="flex gap-3">
            <a asp-action="Create" class="bg-blue-600 text-white px-4 py-2 rounded-xl hover:bg-blue-700 transition">Add New</a>
            <form asp-action="SyncAllStock" method="post">
                <button type="submit" class="bg-gray-600 text-white px-4 py-2 rounded-xl hover:bg-gray-700 transition">Sync All Stock</button>
            </form>
        </div>
    </div>

    <!-- Table -->
    <div class="overflow-auto bg-white shadow-md rounded-2xl">
        <table class="min-w-full divide-y divide-gray-200 text-sm text-center">
            <thead class="bg-gray-100 text-gray-700 uppercase">
                <tr>
                    <th class="px-4 py-3">Product Name</th>
                    <th class="px-4 py-3">Image</th>
                    <th class="px-4 py-3">Price</th>
                    <th class="px-4 py-3">Stock</th>
                    <th class="px-4 py-3">Chicken Size</th>
                    <th class="px-4 py-3">Feed Type</th>
                    <th class="px-4 py-3">Date Created</th>
                    <th class="px-4 py-3">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100">
                @foreach (var item in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-4 py-3 font-medium">@item.ProductName</td>
                        <td class="px-4 py-3">
                            <img src="@item.Image" alt="@item.ProductName" class="w-20 h-20 object-cover rounded shadow" />
                        </td>
                        <td class="px-4 py-3">@item.Price.ToString("N0") VNĐ</td>
                        <td class="px-4 py-3">@item.ProductStock</td>
                        <td class="px-4 py-3">@item.Flock?.ChickenSize</td>
                        <td class="px-4 py-3">@item.Flock?.FeedType</td>
                        <td class="px-4 py-3">@Html.DisplayFor(modelItem => item.DateCreated)</td>
                        <td class="px-4 py-3">
                            <div class="flex justify-center flex-wrap gap-2">
                                <a asp-action="Details" asp-route-id="@item.Id" class="text-white bg-cyan-600 hover:bg-cyan-700 px-3 py-1 rounded text-sm">Details</a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="text-white bg-yellow-500 hover:bg-yellow-600 px-3 py-1 rounded text-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="text-white bg-red-600 hover:bg-red-700 px-3 py-1 rounded text-sm">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="mt-6 flex justify-center">
        <nav class="inline-flex space-x-1 rounded-md shadow-sm" aria-label="Pagination">
            <a asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" class="px-3 py-1.5 border border-gray-300 rounded-l-md text-gray-700 bg-white hover:bg-gray-100 @(Model.HasPreviousPage ? "" : "opacity-50 pointer-events-none")">
                Previous
            </a>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <a asp-action="Index" asp-route-page="@i"
                   class="px-3 py-1.5 border border-gray-300 text-sm @(i == Model.PageIndex ? "bg-blue-600 text-white" : "text-gray-700 bg-white hover:bg-gray-100")">
                    @i
                </a>
            }

            <a asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" class="px-3 py-1.5 border border-gray-300 rounded-r-md text-gray-700 bg-white hover:bg-gray-100 @(Model.HasNextPage ? "" : "opacity-50 pointer-events-none")">
                Next
            </a>
        </nav>
    </div>
</div>
