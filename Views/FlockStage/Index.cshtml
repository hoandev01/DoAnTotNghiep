@model List<ChickenF.Models.FlockStage>
@{
    ViewData["Title"] = "Flock Stages Overview";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
}

<div class="px-6 py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">📊 Flock Stages Overview</h1>
        <div class="space-x-2">
            <button onclick="filterStage('all')" class="bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-1 rounded">All</button>
            <button onclick="filterStage('current')" class="bg-blue-300 hover:bg-blue-400 text-blue-900 px-4 py-1 rounded">🔥 Current</button>
            <button onclick="filterStage('upcoming')" class="bg-purple-300 hover:bg-purple-400 text-purple-900 px-4 py-1 rounded">🚀 Upcoming</button>
            <button onclick="filterStage('ended')" class="bg-orange-300 hover:bg-orange-400 text-orange-900 px-4 py-1 rounded">⏳ Ended</button>
        </div>
    </div>

    <div class="overflow-x-auto shadow bg-white rounded-xl">
        <table class="min-w-full table-auto text-sm text-center" id="stageTable">
            <thead class="bg-gray-100 text-gray-700 uppercase">
                <tr>
                    <th class="px-4 py-3">Flock</th>
                    <th class="px-4 py-3">Stage</th>
                    <th class="px-4 py-3">Start</th>
                    <th class="px-4 py-3">End</th>
                    <th class="px-4 py-3">Note</th>
                    <th class="px-4 py-3">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100">
                @foreach (var stage in Model)
                {
                    var now = DateTime.Now;
                    bool isCurrent = stage.StartDate <= now && stage.EndDate >= now;
                    bool isUpcoming = stage.StartDate > now;
                    bool isEnded = stage.EndDate < now;

                    string stageColor = stage.StageName switch
                    {
                        "Brooding Stage" => "bg-blue-50",
                        "Growth Stage" => "bg-yellow-50",
                        "Pre-Sale Stage" => "bg-orange-50",
                        "Ready for Sale" => "bg-green-50",
                        _ => "bg-gray-50"
                    };

                    string filterClass = isCurrent ? "stage-current" :
                    isUpcoming ? "stage-upcoming" :
                    isEnded ? "stage-ended" : "";

                    string noteHtml = isCurrent ? "<span class='text-green-700 font-semibold'>🔥 Current Stage</span>"
                    : isUpcoming ? "<span class='text-purple-700'>🚀 Upcoming</span>"
                    : isEnded ? "<span class='text-gray-500'>⏳ Ended</span>"
                    : "";

                    <tr class="@stageColor @filterClass">
                        <td class="px-4 py-2 font-medium">@stage.Flock?.FlockName</td>
                        <td class="px-4 py-2">@stage.StageName</td>
                        <td class="px-4 py-2">@stage.StartDate.ToString("dd/MM/yyyy hh:mm tt")</td>
                        <td class="px-4 py-2">@stage.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td class="px-4 py-2">@Html.Raw(noteHtml)</td>
                        <td class="px-4 py-2">
                            <div class="flex justify-center gap-2">
                                <a asp-action="Edit" asp-route-id="@stage.Id"
                                   class="bg-yellow-500 text-white px-2 py-1 rounded text-xs hover:bg-yellow-600">Edit</a>
                                <a asp-action="Delete" asp-route-id="@stage.Id"
                                   class="bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function filterStage(type) {
            const rows = document.querySelectorAll("#stageTable tbody tr");
            rows.forEach(row => {
                row.style.display = "table-row"; // default
                if (type === 'all') return;

                if (type === 'current' && !row.classList.contains("stage-current"))
                    row.style.display = "none";
                else if (type === 'upcoming' && !row.classList.contains("stage-upcoming"))
                    row.style.display = "none";
                else if (type === 'ended' && !row.classList.contains("stage-ended"))
                    row.style.display = "none";
            });
        }

        // Optional: Auto-load current only on page load
        window.addEventListener("DOMContentLoaded", () => {
            filterStage("current");
        });
    </script>
}
