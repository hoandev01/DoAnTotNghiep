@model List<CartItem>
@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var total = Model.Sum(item => item.CartItemQuantity * item.Product.Price);
}

<div class="container py-5">
    <h2 class="text-center mb-5">Checkout</h2>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="row justify-content-center">
        <!-- Product List -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">Product List</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-striped mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Product.ProductName</td>
                                    <td>@item.CartItemQuantity</td>
                                    <td>@item.Product.Price.ToString("N0") VNĐ</td>
                                    <td>@($"{item.CartItemQuantity * item.Product.Price:N0} VNĐ")</td>
                                </tr>
                            }
                            <tr class="table-secondary">
                                <td colspan="3" class="text-end"><strong>Total:</strong></td>
                                <td><strong>@total.ToString("N0") VNĐ</strong></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Payment Method -->
        <div class="col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">Payment Method</h5>
                </div>
                <div class="card-body">
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="bank" value="bank" checked>
                        <label class="form-check-label" for="bank">Pay via Bank Transfer</label>
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="momo" value="momo">
                        <label class="form-check-label" for="momo">Pay via MoMo</label>
                    </div>
                    <div class="form-check mb-4">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="cash" value="cash">
                        <label class="form-check-label" for="cash">Cash on Delivery</label>
                    </div>

                    <div id="qrCodeContainer" class="text-center mb-4" style="display: none;">
                        <h6 class="mb-3">Scan QR Code to Pay</h6>
                        <img id="qrCodeImage" src="" alt="QR Code" class="img-fluid rounded border" style="max-width: 200px;" />
                    </div>

                    <button id="checkoutButton" class="btn btn-success w-100 py-2 fw-bold">
                        Confirm
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("checkoutButton").addEventListener("click", function () {
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

            fetch('@Url.Action("ProcessCheckout", "Checkout")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ paymentMethod: paymentMethod })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (data.showQR) {
                        document.getElementById("qrCodeContainer").style.display = "block";
                        document.getElementById("qrCodeImage").src = data.qrImageUrl;
                    } else if (data.redirectUrl) {
                        window.location.href = data.redirectUrl;
                    }
                } else {
                    alert(data.message || "Checkout failed.");
                }
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Error during checkout process.");
            });
        });

        document.querySelectorAll('input[name="paymentMethod"]').forEach(input => {
            input.addEventListener("change", function () {
                document.getElementById("qrCodeContainer").style.display = "none";
            });
        });
    </script>
}
