@model ChickenF.Models.Product

@{
    ViewData["Title"] = "Product Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var isOutOfStock = Model.ProductStock == 0;
    var isRecentlySoldOut = isOutOfStock && Model.OutOfStockAt.HasValue && Model.OutOfStockAt.Value >= DateTime.Now.AddDays(-1);
}

<style>
    .product-detail-image {
        position: relative;
        overflow: hidden;
        border-radius: 1rem;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        max-height: 420px;
    }

        .product-detail-image img {
            width: 100%;
            height: auto;
            max-height: 420px;
            object-fit: cover;
            border-radius: 1rem;
            transition: transform 0.3s ease-in-out, filter 0.3s ease;
        }

            .product-detail-image img:hover {
                transform: scale(1.03);
                filter: brightness(0.95);
            }

    .badge {
        font-size: 0.9rem;
        padding: 0.6em 1em;
        border-radius: 999px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    .price-text {
        color: #e74c3c;
        font-size: 1.3rem;
        font-weight: bold;
    }

    .btn-primary {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-primary:hover {
            background-color: #218838;
            transform: scale(1.02);
            transition: 0.3s ease;
        }

    .btn-secondary:hover {
        transform: scale(1.02);
        transition: 0.3s ease;
    }

    #totalPriceInput {
        font-weight: bold;
        background-color: #f8f9fa;
        border: 2px solid #dee2e6;
        border-radius: 0.5rem;
    }

    .form-select {
        border-radius: 0.5rem;
    }

    .toast-container {
        z-index: 2000;
    }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="row g-4 align-items-start">

                <!-- Image -->
                <div class="col-md-6">
                    <div class="product-detail-image">
                        @if (isOutOfStock)
                        {
                            <span class="badge bg-danger position-absolute top-0 start-0 ms-3 mt-3 shadow-sm">
                                @(isRecentlySoldOut ? "🔥 Just sold out" : "Sold out")
                            </span>
                        }

                        <img src="@(Model.Image?.StartsWith("http") == true ? Model.Image : Url.Content("~/" + Model.Image))"
                             alt="@Model.ProductName" class="img-fluid" />
                    </div>
                </div>

                <!-- Info -->
                <div class="col-md-6">
                    <h2 class="mb-3">@Model.ProductName</h2>
                    <p><strong>Price per unit(VND):</strong> <span class="price-text">@Model.Price.ToString("N0", System.Globalization.CultureInfo.InvariantCulture)</span></p>
                    <p>
                        <strong>Stock:</strong>
                        <span class="@(isOutOfStock ? "text-danger fw-semibold" : "text-success fw-semibold")">@Model.ProductStock</span>
                    </p>
                    <p class="text-muted mb-4"><strong>Note:</strong> @Model.ProductDescription</p>

                    @if (!isOutOfStock)
                    {
                        <form asp-controller="Cart" asp-action="AddToCart" method="post" id="addToCartForm">
                            <input type="hidden" name="productId" value="@Model.Id" />

                            <div class="mb-3">
                                <label for="packageSelect" class="form-label">Choose Package</label>
                                <select id="packageSelect" name="quantity" class="form-select"
                                        data-stock="@Model.ProductStock" data-price="@Model.Price">
                                    @if (Model.ProductStock >= 10)
                                    {
                                        <option value="10" selected>10 chickens</option>
                                    }
                                    @if (Model.ProductStock >= 50)
                                    {
                                        <option value="50">50 chickens (-5%)</option>
                                    }
                                    @if (Model.ProductStock >= 100)
                                    {
                                        <option value="100">100 chickens (-10%)</option>
                                    }
                                    @if (Model.ProductStock >= 200)
                                    {
                                        <option value="200">200 chickens (-15%)</option>
                                    }
                                    @if (Model.ProductStock >= 500)
                                    {
                                        <option value="500">500 chickens (-20%)</option>
                                    }
                                    @if (Model.ProductStock >= 1000)
                                    {
                                        <option value="1000">1000 chickens (-25%)</option>
                                    }
                                </select>
                            </div>

                            <input type="hidden" name="quantity" id="quantityInput" />

                            <div class="mb-4">
                                <label for="totalPriceInput" class="form-label">Total Price(VND)</label>
                                <input type="text" id="totalPriceInput" class="form-control" readonly />
                            </div>

                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary">+ Add to Cart</button>
                                <a asp-action="Index" class="btn btn-secondary">← Back to List</a>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-warning mt-3">
                            This product is out of stock. Please check back later!
                        </div>
                        <a asp-action="Index" class="btn btn-secondary mt-2">← Back to List</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="cartToast" class="toast text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">✅ Product added to cart!</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Scripts {
    @if (!isOutOfStock)
    {
        <script>
            $(document).ready(function () {
                const pricePerUnit = parseFloat('@Model.Price');

                function updatePriceByPackage() {
                    const quantity = parseInt($('#packageSelect').val()) || 10;
                    let discount = 0;

                    if (quantity >= 1000) discount = 0.25;
                    else if (quantity >= 500) discount = 0.20;
                    else if (quantity >= 200) discount = 0.15;
                    else if (quantity >= 100) discount = 0.10;
                    else if (quantity >= 50) discount = 0.05;

                    const totalPrice = quantity * pricePerUnit * (1 - discount);
                    $('#totalPriceInput').val(totalPrice.toLocaleString('en-US') );

                    $('#quantityInput').val(quantity);
                }

                updatePriceByPackage();
                $('#packageSelect').on('change', updatePriceByPackage);

                $('#addToCartForm').on('submit', function (e) {
                    e.preventDefault();

                    $.ajax({
                        url: $(this).attr('action'),
                        method: 'POST',
                        data: $(this).serialize(),
                        success: function (response) {
                            if (response.success) {
                                const toast = new bootstrap.Toast(document.getElementById('cartToast'));
                                toast.show();
                            } else if (response.redirectToLogin) {
                                window.location.href = '@Url.RouteUrl("login")';
                            } else {
                                alert(response.message || 'Something went wrong.');
                            }
                        },
                        error: function (xhr) {
                            if (xhr.status === 401) {
                                window.location.href = '@Url.RouteUrl("login")';
                            } else {
                                alert('Unexpected error. Please try again.');
                            }
                        }
                    });
                });
            });
        </script>
    }
}
